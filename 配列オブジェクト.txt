配列オブジェクト・・・一つの変数でたくさんの情報を持つことができるオブジェクト。
                    配列の中にはたくさんのオブジェクトを入れることができ、
                    順番にオブジェクトを管理します。なのでデータ要素と順番がひもづけられる。
                    配列を使う際に大きな箱をイメージしてそこの箱にはいろんな情報を何個で
                    も入れることが出来ます。
(ex)
array(変数) = [1,2,3,4]

Arrayクラス・・・配列オブジェクトの元になっているクラスのこと。
                いままで作ってきた配列はArrayを省略したものと考える。

配列の宣言と初期化は二種類記述方法がある。

ex1)
arr = Array.new
arr = []

ex2)
宣言と同時に初期化することができ、初期化することによって効率良くできる。

arr = Array.new(4,"hello")
put arr

結果：["hello","hello","hello","hello",]

配列オブジェクトを変数に代入の仕方
(ex)
array = Array["赤","あお","緑"]
array[1] = "青"
puts array
結果：["赤","青","緑"]

配列に関連した5つのメソッド
■lengthとnitemsの違い

・length・・・配列の中に含まれる要素の数を返します。また、lengthと同じ処理をしてくれるsize
              もある。
ex)
array = Array["赤","青","緑"]
puts array.length
結果:3

・nitems・・・配列に含まれる要素の数で「nil」が代入されている要素を除いた数を返す。

ex)
array = Array["赤",nill,"緑"]
puts array.nitems
結果：2

■配列を結合するメソッド

・push・・・配列の末尾に引数を要素として追加する。
ex)配列に要素を追加する方法
array = [1,2,3]
array.push(10,100)
puts array
結果：[1,2,3,10,100]

ex)配列に配列を追加する方法
array1 = [1,2,3]
array2 = [10,100]
array1.push(array2)
puts array1
結果：[1,2,3,[10,100]]

・flatten・・・pushでは、配列に配列が入っている形になっています。それを解消してくれるのがflattenメソッドです。
              3以上の配列でも結合させることができる。配列の中に含まれる配列からすべて要素を取り出しその配列の中にきれいに並べてくれる。
ex)
array1 = [1,2,3]
array2 = [10,100]
array3 = ["a","bb","abc"]
array1.push(array2).push(array3)
#arra1 = [1,2,3,[10,100],["a","bb","abc"]]
array1.flatten!
puts array1
結果：[1,2,3,10,100,"a","bb","abc"]
